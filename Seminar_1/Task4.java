/*===================–ó–∞–¥–∞–Ω–∏–µ ‚Ññ4==================================
üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç —Å–∞–º—É—é –¥–ª–∏–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –æ–±—â–µ–≥–æ
–ø—Ä–µ—Ñ–∏–∫—Å–∞ —Å—Ä–µ–¥–∏ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
üìå –ï—Å–ª–∏ –æ–±—â–µ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –Ω–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É "".
*/

//1.
// public class Task4 {
//     public static void main(String[] args) {
//         String[] strs = { "flower", "flow", "flight" }; // fl - –æ–±—â–∏–π –ø—Ä–µ—Ñ–∏–∫—Å –≤ —Ç—Ä–µ—Ö —Å–ª–æ–≤–∞—Ö
//         String prefix = strs[0]; // –∑–∞ –ø—Ä–µ—Ñ–∏–∫—Å –ø—Ä–∏–Ω–∏–º–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –º–∞—Å—Å–∏–≤–∞
//         for (int i = 0; i < strs.length; i++) {
//             // –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞(—Å—Ç—Ä–æ–∫–∏:flow) –º–∞—Å—Å–∏–≤–∞ –≤ –ø—Ä–µ—Ñ–∏–∫—Å
//             // (flower):
//             while (strs[i].indexOf(prefix) != 0) {
//                 // –µ—Å–ª–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–µ—Ç, —Ç–æ –æ—Ç –ø—Ä–µ—Ñ–∏–∫—Å–∞ (flower) –æ—Ç—Å–µ–∫–∞–µ–º –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª, –ø–æ–ª—É—á–∞–µ–º
//                 // (flowe)
//                 // –∏ —Å–Ω–æ–≤–∞ –∏–¥–µ–º –≤ while –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞(—Å—Ç—Ä–æ–∫–∏:flow)
//                 // –º–∞—Å—Å–∏–≤–∞ –≤ –ø—Ä–µ—Ñ–∏–∫—Å (flowe).
//                 prefix = prefix.substring(0, prefix.length() - 1);
//                 // –∫–∞–∫ —Ç–æ–ª—å–∫–æ flow == flow (—á–∞—Å—Ç—å —Å–ª–æ–≤–∞ –æ—Ç flower) –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ while.
//                 // .indexOf() - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É
//             }
//             if (prefix == ""){
//                 break;
//             }
//         }
//         System.out.println(prefix);
//     }
// }

//2.
public class Task4 {
    public static void main(String[] args) {
        String[] strs = { "flower", "flow", "flight" };
        String prefix = getPrefix(strs);
        System.out.println(prefix);
    }

    private static String getPrefix(String[] strs) {
        String prefix = strs[0];
        for (int i = 0; i < strs.length; i++) {
            while (strs[i].indexOf(prefix) != 0) {
                prefix = prefix.substring(0, prefix.length() - 1);
            }
            if (prefix == ""){
                return "";
            }
        }
        return prefix;
    }
}