/*
 * -----------------------------–ó–∞–¥–∞–Ω–∏–µ ‚Ññ3------------------------------------------
üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫—É (String) –∏
–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
boolean –∑–Ω–∞—á–µ–Ω–∏–µ).
 */

import java.util.Scanner;

public class Task3 { //—Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π –∫–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in, "ibm866");
        System.out.println("–ó–∞–¥–∞–π—Ç–µ —Å—Ç—Ä–æ–∫—É: ");
        String str = scanner.nextLine();
        System.out.println(isPalindrome(str) ? "–Ø–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º" : "–ù–µ –ø–∞–ª–∏–Ω–¥—Ä–æ–º!");
        scanner.close();

    }
//1
    // public static boolean isPalindrome(String str) {
    //     for (int i = 0; i < str.length()/2; i++) {
    //         if (str.charAt(i) != str.charAt(str.length() - 1 - i)) {
    //             return false;
    //         }
    //     }
    //     return true;
    // }
//2 
    // public static void main(String[] args) {
    //     System.out.println(isPalindrom("radar"));
    //     System.out.println(isPalindrom("–∞—Ä–æ–∑–∞—É–ø–∞–ª–∞–Ω–∞–ª–∞–ø—É–∞–∑–æ—Ä–∞"));
    //     System.out.println(isPalindrom("hello"));
    
    
    // }
    
    public static boolean isPalindrome(String input) {
        if (input == null || input.length() == 0) {
            return false;
        }
        int left = 0;
        int right = input.length() - 1;
        while (left < right) {
            if (input.charAt(left) != input.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}
